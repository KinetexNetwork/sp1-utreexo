name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  SP1_PATH: ~/.sp1/bin  # Add SP1 to PATH for all jobs

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Cache Rust deps + SP1 installation
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          target
          ~/.sp1  # Cache SP1 installation
        key: ${{ runner.os }}-deps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: Install SP1
      run: |
        if [ ! -d ~/.sp1 ]; then
          curl -L https://sp1up.succinct.xyz | bash
          ~/.sp1/bin/sp1up
        fi
        echo "$HOME/.sp1/bin" >> $GITHUB_PATH

    - name: Install clang
      run: |
        sudo apt update
        sudo apt install clang
        clang --version

    - name: Build circuit
      run: |
        cd circuit/program/utreexo
        cc=clang CC=clang ~/.sp1/bin/cargo-prove prove build
    - name: Build
      run: cargo build --workspace --exclude btcx-program-utreexo --exclude utreexo-script
    - name: Run unit tests
      run: cargo test --workspace --exclude btcx-program-utreexo --exclude utreexo-script

  end-to-end:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Shared cache with build job
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          target
          ~/.sp1
        key: ${{ runner.os }}-deps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    # Reinstall SP1 only if not cached
    - name: Install SP1
      run: |
        if [ ! -d ~/.sp1 ]; then
          curl -L https://sp1up.succinct.xyz | bash
          ~/.sp1/bin/sp1up
        fi
        echo "$HOME/.sp1/bin" >> $GITHUB_PATH

    - name: Install clang
      run: |
        sudo apt update
        sudo apt install clang
        clang --version

    - name: Run end to end tests
      run: python3 run-end-to-end.py --test

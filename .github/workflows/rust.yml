name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Cache Rust dependencies and build artifacts
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install sp1
      run: |
        curl -L https://sp1up.succinct.xyz | bash
        ~/.sp1/bin/sp1up 
        ~/.sp1/bin/cargo-prove prove --version

    - name: Install clang
      run: |
        sudo apt update
        sudo apt install clang
        clang --version
        
    - name: Build circuit
      run: |
        cd circuit/program/utreexo
        cc=clang CC=clang ~/.sp1/bin/cargo-prove prove build
    - name: Build
      run: cargo build --workspace --exclude btcx-program-utreexo --exclude utreexo-script
    - name: Run unit tests
      run: cargo test --workspace --exclude btcx-program-utreexo --exclude utreexo-script

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Cache Rust dependencies and build artifacts
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    # Clippy will fail without this step.
    - name: Build riscv32 binary
      run: cc=clang CC=clang cargo b --release --bin utreexo
    - name: Install Clippy
      run: rustup component add clippy
    - name: Run fmt
      run: cargo fmt --all -- --check
    - name: Run Clippy
      run: cargo clippy -- -D warnings

  end-to-end:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Run end to end tests
      run: python3 run-end-to-end.py --test